[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "github-bot-api"
version = "0.5.2"
description = "API for creating GitHub bots and webhooks in Python."
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
license = "MIT"
readme = "readme.md"
packages = [{ include = "github_bot_api", from = "src" }]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
keywords = []

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/NiklasRosenstein/python-github-bot-api/issues"
Documentation = "https://niklasrosenstein.github.io/python-github-bot-api/"
Homepage = "https://github.com/NiklasRosenstein/python-github-bot-api"
Repository = "https://github.com/NiklasRosenstein/python-github-bot-api"

[tool.poetry.dependencies]
python = "^3.8"
"nr.functional" = "^0.2.0"
cryptography = "^39.0.2"
Deprecated = "^1.2.13"
flask = { version = "*", optional = true }
PyGithub = { version = "^1.58", optional = true }
PyJWT = "^2.6.0"
requests = "^2.28.2"
urllib3 = "^1.26.15"

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
mypy = "*"
pytest = "*"
types-deprecated = "*"
types-flask = "*"
types-requests = "*"

[tool.slap]
typed = true

[tool.slap.test]
check = "slap check"
mypy = "dmypy run src"
pytest = "pytest -vv"
black = "black --check src"
isort = "isort --check-only src"
flake8 = "flake8 src"

[tool.slap.run]
fmt = "black src && isort src"

[tool.mypy]
python_version = "3.8"
explicit_package_bases = true
mypy_path = ["src"]
namespace_packages = true
pretty = true
show_error_codes = true
show_error_context = true
# strict = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
check_untyped_defs = true

[tool.isort]
profile = "black"
line_length = 120
combine_as_imports = true

[tool.black]
line-length = 120
